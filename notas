aruizmoya@ugr.es

Mandar email (desde cuenta @correo.ugr.es)

Asunto: FR-DG2

Proponer trabajos antes de octubre



Funciones interesantes:


need mallaind.cpp and mallaind.hpp

void MallaInd::RandomVertices(){
   srand(time(NULL));

   float a,b,c;

   for(int i=0; i<vertices.size(); i++){
      a = (rand() % 256)/255.0;
      b = (rand() % 256)/255.0;
      c = (rand() % 256)/255.0;
      col_ver.push_back({a,b,c});
   }
}


void MallaInd::ModoAjedrez(Tupla3f color1, Tupla3f color2){

   for(int i=0; i < vertices.size(); i++){
         col_ver.push_back(color2);
   }
}



adding new things:


Tupla4f Objeto3D::leerFijarColVertsCauce( ContextoVis & cv )
{
   assert( cv.cauce_act != nullptr );

   // leer color previo
   Tupla4f color_previo = cv.cauce_act->leerColorActual();

   if ( cv.modo_seleccion )
   {
      // modo seleccion: usar el identificador del objeto, si no es -1
      const int ident_nodo = leerIdentificador();
      if ( ident_nodo != -1 )
         FijarColVertsIdent( *(cv.cauce_act), ident_nodo );
   }
   else
   {
      // modo dibujo: fijar el color si el objeto tiene color y está activada esta funcionalidad
      if ( /**cv.fijar_colores_objetos &&**/ tieneColor() )
         glColor3fv( leerColor() );
   }

   // devolver color previo
   return color_previo ;
}


:





// ****************************************************************************
// Clase 'MallaPLY'

MallaPLY::MallaPLY( const std::string & nombre_arch )
{
   ponerNombre( std::string("malla leída del archivo '") + nombre_arch + "'" );

   // COMPLETAR: práctica 2: leer archivo PLY e inicializar la malla
   // llamar a 'calcularNormales' para el cálculo de normales
   // ..........................

}



